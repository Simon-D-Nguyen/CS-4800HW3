@startuml
'https://plantuml.com/class-diagram

abstract class Employee {
-firstName: String
-lastName: String
-socialSecurityNumber: String

+ getFirstName(): String
+ setFirstName(in firstName: String): void
+ getLastName(): String
+ setLastName(in firstName: String): void
+ getSocialSecurityNumber(): String
+ setSocialSecurityNumber(in socialSecurityNumber: String): void
+ toString(): String
}

class SalariedEmployee {
- weeklySalary: int

+ getWeeklySalary(): int
+ setWeeklySalary(in weeklySalary: int): void
+ toString(): String
}


class HourlyEmployee{
- wage: int
- hoursWorked: int

+ getWage(): int
+ setWage(in wage: int): void
+ getHoursWorked(): int
+ setHoursWorked(in hoursWorked: int): void
+ toString(): String
}

class CommissionEmployee {
- commissionRate: int
- grossSales: int

+ getCommissionRate(): int
+ setCommissionRate(in commissionRate: int): void
+ getGrossSales(): int
+ setGrossSales(in grossSales: int): void
+ toString(): String
}

class BaseEmployee {
- baseSalary: int

+ getBaseSalary(): int
+ setBaseSalary(in baseSalary: int): int
+ toString(): String
}


Employee <|-- SalariedEmployee
Employee <|-- HourlyEmployee
Employee <|-- CommissionEmployee
Employee <|-- BaseEmployee


class Driver {
+ {static} main(in args: String[*]): void
}

SalariedEmployee <-- Driver : uses
HourlyEmployee <-- Driver : uses
CommissionEmployee <-- Driver : uses
BaseEmployee <-- Driver : uses


@enduml